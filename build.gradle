plugins {
  id "java"
  id 'net.nemerosa.versioning' version '2.0.0'
}

	// docker build -f Dockerfile -t claeis/oereb-web-service-docker .
	// docker run -p 8080:8080 -d claeis/oereb-web-service-docker
	// docker run -it --rm alpine ping 172.17.0.2

repositories {
	mavenLocal()
	mavenCentral()
	jcenter()
    maven {
        url "http://oss.jfrog.org/artifactory/simple/oss-snapshot-local/"
    }
    maven {
        url "http://jars.interlis.ch"
    }
}

dependencies {
    compile group: 'ch.ehi.oereb', name: 'oereb-web-service', version: "0.9.+"
}

jar {
  manifest {
    attributes(
      "Main-Class": "ch.ehi.oereb.webservice.Application",
      "Class-Path": configurations.runtimeClasspath.collect { 'libs/'+it.getName() }.join(' '))
  }
}

task jardist(type: Copy) {
	delete fileTree('dist')
	destinationDir = file('dist')
	from jar
    dependsOn configurations.runtimeClasspath
	into('libs'){
		from {
			configurations.runtimeClasspath
		}
	}    
}
task buildImage(dependsOn: jardist){
	doLast { task ->
			// https://github.com/nemerosa/versioning
			println versioning.info.full
            def buildident=System.getProperty('TRAVIS_BUILD_NUMBER','localbuild')
            def githash=versioning.info.commit
            def build_timestamp=getTimestamp()
			exec {
				commandLine 'docker', 'build',
				'--no-cache', '--force-rm',
				'-t', "sogis/oereb-web-service:$buildident",
				'-t', "sogis/oereb-web-service:latest",
				'--label', "oereb-web-service.created=$build_timestamp", 
				'--label', "oereb-web-service.git_commit=$githash",
				'--label', "oereb-web-service.travis_build=$buildident",
				'-f', 'Dockerfile',  '.'
			}
			// docker run -p 8080:8080 -d sogis/oereb-web-service
			// docker run -p 8080:8080 -e DBURL=jdbc:postgresql://docker.for.win.localhost/ceis -e DBSCHEMA=oereb -e DBUSR=usr -e DBPWD=pwd  sogis/oereb-web-service
			// docker run -it --rm alpine ping 172.17.0.2
        }
    }
task push(dependsOn: buildImage){
	doLast { task ->
			exec {
				commandLine 'docker', 'push', 
				"sogis/oereb-web-service:latest"
			}
        }
    }
def getTimestamp() {
    def date = new Date()
    return date.format('yyyy-MM-dd HH:mm:ss')
}