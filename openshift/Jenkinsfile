def appName = env.JOB_BASE_NAME
def environment = params.NAMESPACE.substring(params.NAMESPACE.lastIndexOf('-') + 1)

pipeline {
    agent any
    options {
        timeout(time: 120, unit: 'SECONDS')
    }
    stages {
        stage('Restart only') {
            when { expression { params.RESTART_ONLY } }
            steps {
                sh "oc rollout latest dc/${appName} -n ${params.NAMESPACE}"
            }
        }
        stage('Apply configuration') {
            when { expression { !params.RESTART_ONLY } }
            steps {
                sh "oc process -f openshift/${appName}.yaml --param-file=openshift/${appName}_${environment}.params | oc apply -f - -n ${params.NAMESPACE}"
                // In test environment additionally update the latest image stream tag
                script {
                    if (environment == 'test') {
                        // First wait for previous rollout to finish
                        sh "oc get dc/${appName} -n ${params.NAMESPACE}"
                        sh "oc rollout status dc/${appName} --watch -n ${params.NAMESPACE}"
                        // Update the latest image stream tag
                        sh "oc import-image ${appName}:latest -o name -n ${params.NAMESPACE}"
                    }
                }
            }
        }
        stage('Wait for rollout to finish') {
            steps {
                sh "oc get dc/${appName} -n ${params.NAMESPACE}"
                sh "oc rollout status dc/${appName} --watch -n ${params.NAMESPACE}"
            }
        }
    }
    post {
        always {
            sh "oc status --suggest -n ${params.NAMESPACE}"
        }
    }
}
